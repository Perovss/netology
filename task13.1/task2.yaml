---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: postgres
  name: postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - image: postgres:13-alpine 
        name: postgres
        env:
        - name: POSTGRES_PASSWORD
          value: "postgres"
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_DB
          value: "news"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        env:
        - name: BASE_URL
          value: "http://backend:9000"
        image: perovss/frontend
        ports:
        - containerPort: 80
          protocol: TCP
      initContainers:
      - name: init-postgres
        image: busybox
        command: ['sh', '-c', 'sleep 15']
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: perovss/backend
        env:
        - name: DATABASE_URL
          value: "postgres://postgres:postgres@db:5432/news"
        ports:
        - containerPort: 9000
          protocol: TCP
      initContainers:
      - name: init-postgres
        image: busybox
        command: ['sh', '-c', 'sleep 15']
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: frontend
  name: frontend
spec:
  selector:
    app: frontend
  ports:
  - name: frontend
    port: 8000
    protocol: TCP
    targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgres
  name: db
spec:
  selector:
    app: postgres
  ports:
  - name: postgres
    port: 5432
    protocol: TCP
    targetPort: 5432
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
spec:
  rules:
  - host: netology.example
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 8000
